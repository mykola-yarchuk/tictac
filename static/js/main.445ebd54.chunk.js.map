{"version":3,"sources":["App.js","index.js"],"names":["Square","props","className","onClick","value","Board","handleClick","i","squares","state","slice","calculateWinner","xIsNext","setState","Array","fill","this","status","winner","renderSquare","React","Component","lines","length","a","b","c","Game","ReactDOM","render","document","getElementById"],"mappings":"gNAGA,SAASA,EAAOC,GACZ,OACE,4BACAC,UAAU,SACVC,QAASF,EAAME,SAEZF,EAAMG,O,IAKTC,E,kDACJ,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IAORK,YAAc,SAACC,GACb,IAAMC,EAAU,EAAKC,MAAMD,QAAQE,QAC/BC,EAAgBH,IAAYA,EAAQD,KAGxCC,EAAQD,GAAK,EAAKE,MAAMG,QAAU,IAAM,IACxC,EAAKC,SAAS,CACZL,QAASA,EACTI,SAAU,EAAKH,MAAMG,YAdvB,EAAKH,MAAQ,CACXD,QAASM,MAAM,GAAGC,KAAK,MACvBH,SAAS,GAJM,E,yDAoBNL,GAAI,IAAD,OACd,OACE,kBAACP,EAAD,CACEI,MAAOY,KAAKP,MAAMD,QAAQD,GAC1BJ,QAAS,kBAAM,EAAKG,YAAYC,Q,+BAK5B,IAEJU,EAFG,OACDC,EAASP,EAAgBK,KAAKP,MAAMD,SAQ1C,OALES,EADEC,EACI,cAAUA,GAEV,qBAAiBF,KAAKP,MAAMG,QAAU,IAAM,KAIlD,6BACE,yBAAKV,UAAU,UAAUe,GACzB,yBAAKf,UAAU,aACZc,KAAKG,aAAa,GAClBH,KAAKG,aAAa,GAClBH,KAAKG,aAAa,IAErB,yBAAKjB,UAAU,aACZc,KAAKG,aAAa,GAClBH,KAAKG,aAAa,GAClBH,KAAKG,aAAa,IAErB,yBAAKjB,UAAU,aACZc,KAAKG,aAAa,GAClBH,KAAKG,aAAa,GAClBH,KAAKG,aAAa,IAErB,4BAAQhB,QAAS,kBAAO,EAAKU,SAAS,CACpCL,QAASM,MAAM,GAAGC,KAAK,MACvBH,SAAS,MAFX,c,GAzDYQ,IAAMC,WAoF1B,SAASV,EAAgBH,GAWvB,IAVA,IAAMc,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAf,EAAI,EAAGA,EAAIe,EAAMC,OAAQhB,IAAK,CAAC,IAAD,cACnBe,EAAMf,GADa,GAC9BiB,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIlB,EAAQgB,IAAMhB,EAAQgB,KAAOhB,EAAQiB,IAAMjB,EAAQgB,KAAOhB,EAAQkB,GACpE,OAAOlB,EAAQgB,GAGnB,OAAO,KAGMG,M,uKAlCX,OACE,yBAAKzB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,aACb,8BACA,mC,GATSkB,IAAMC,WC9EzBO,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.445ebd54.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction Square(props) {\n    return (\n      <button \n      className=\"square\"\n      onClick={props.onClick}\n      >\n        {props.value}\n      </button>\n    );\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n    };\n  }\n\n  handleClick = (i) => {\n    const squares = this.state.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  renderSquare(i) {\n    return (\n      <Square \n        value={this.state.squares[i]}\n        onClick={() => this.handleClick(i)}\n      />\n    );\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    if (winner) {\n      status = `Win ${winner}`;\n    } else {\n      status = `Next turn: ${this.state.xIsNext ? 'X' : 'O'}`\n    }\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n        <button onClick={() => (this.setState({\n          squares: Array(9).fill(null),\n          xIsNext: true, \n        }))}>\n          RESET\n        </button>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nexport default Game;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './App';\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}